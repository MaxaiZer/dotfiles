steps:
  - id: terminal-core
    tags: ["terminal"]
    packages:
      ["gcc", "ripgrep", "sed", "neovim", "lazygit", "zoxide", "starship"]

  - id: fzf
    os: "!windows"
    tags: ["terminal"]
    script: |
      git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
      ~/.fzf/install --key-bindings --completion --no-update-rc

  - id: neovim-linux-helpers
    os: "linux"
    tags: ["terminal"]
    packages: ["xclip"]

  - id: windows-powershell
    os: "windows"
    tags: ["terminal"]
    packages: ["pwsh", "fzf"]
    script:
      shell: pwsh
      run: |
        Install-Module -Name posh-git -Scope CurrentUser -Force
        Install-Module -Name PSFzf -Scope CurrentUser -Force

  - id: yazi
    os: "!%debian"
    tags: ["terminal"]
    packages: ["yazi"]

  - id: yazi-debian
    os: "%debian"
    tags: ["terminal"]
    when: |
      if command -v yazi >/dev/null 2>&1; then exit 1; else exit 0; fi
    script: |
      wget -qO yazi.zip https://github.com/sxyazi/yazi/releases/latest/download/yazi-x86_64-unknown-linux-gnu.zip
      unzip -q yazi.zip -d yazi-temp
      sudo mv yazi-temp/*/{ya,yazi} /usr/local/bin
      rm -rf yazi-temp yazi.zip

  - id: fd-find
    os: "!windows && !%arch"
    tags: ["terminal"]
    packages: ["fd-find"]

  - id: fd
    os: "windows || %arch"
    tags: ["terminal"]
    packages: ["fd"]

  - id: stow
    os: "!windows"
    tags: ["terminal", "stow"]
    packages: ["git", "stow"]
    script: |
      git clone https://github.com/MaxaiZer/dotfiles ~/dotfiles
      cd ~/dotfiles
      stow nvim
      stow yazi
      sudo mkdir -p /usr/share/backgrounds
      for img in ~/dotfiles/backgrounds/*; do
        sudo ln -s "$img" /usr/share/backgrounds/
      done

  - id: stow-zsh
    os: "!windows"
    tags: ["terminal", "stow"]
    env: ["MY_SHELL"]
    packages: ["zsh"]
    when: |
      [ "${MY_SHELL,,}" = "zsh" ] && exit 0 || exit 1
    script: |
      chmod +x ~/dotfiles/zsh/setup.sh
      ~/dotfiles/zsh/setup.sh

  - id: stow-fish
    os: "!windows"
    tags: ["terminal", "stow"]
    env: ["MY_SHELL"]
    packages: ["fish"]
    when: |
      [ "${MY_SHELL,,}" = "fish" ] && exit 0 || exit 1
    script: |
      set -e
      cd ~/dotfiles
      stow starship
      chmod +x ~/dotfiles/fish/setup.sh
      ~/dotfiles/fish/setup.sh

  - id: stow-konsole
    os: "!windows"
    tags: ["terminal", "stow"]
    when: |
      if command -v konsole >/dev/null 2>&1; then exit 0; else exit 1; fi
    script: |
      cd ~/dotfiles
      stow konsole
      sed -i "s/^DefaultProfile=.*/DefaultProfile=MyProfile.profile/" "$HOME/.config/konsolerc"

  - id: stow-windows
    os: "windows"
    tags: ["terminal", "stow", "no-admin"]
    script:
      shell: pwsh
      run: |
        git clone https://github.com/MaxaiZer/dotfiles "$HOME/dotfiles"
        #nvim
        $targetDir = "$env:LOCALAPPDATA\nvim"
        New-Item -ItemType Directory -Force -Path $targetDir | Out-Null
        Copy-Item -Recurse -Force "$HOME\dotfiles\nvim\.config\nvim\*" $targetDir
        #yazi
        $targetDir = "$env:APPDATA\yazi\config"
        $targetPath = "$targetDir\yazi.toml"
        New-Item -ItemType Directory -Force -Path $targetDir | Out-Null
        Copy-Item -Force "$HOME\dotfiles\yazi\.config\yazi\yazi.toml" $targetPath
        (Get-Content -Path $targetPath -Raw) -replace '\$@', '%1' | Set-Content -Path $targetPath -NoNewline
        #starship
        Copy-Item -Force "$HOME\dotfiles\starship\.config\starship.toml" "$HOME\.config\"
        #pwsh
        Set-Content -Path $PROFILE -Value (Get-Content "$HOME\dotfiles\pwsh\profile.ps1" -Raw)

  - id: nerd-fonts
    os: "!windows"
    tags: ["terminal", "fonts"]
    packages: ["jq", "unzip"]
    when: |
      if fc-list | grep -qi 'JetBrainsMono.*Nerd Font'; then
          exit 1
      else
          exit 0
      fi
    script: |
      chmod +x ~/dotfiles/install_nerd_fonts.sh
      ~/dotfiles/install_nerd_fonts.sh

  - id: nerd-fonts-windows
    os: "windows"
    tags: ["terminal", "fonts"]
    pre_script:
      shell: pwsh
      run: scoop bucket add nerd-fonts
    packages: ["JetBrainsMono-NF"]
